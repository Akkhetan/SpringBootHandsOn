Taco Cloud is a place where you can order tacos online. But more than that, Taco Cloud wants to enable its customers to express their creative side
and design custom tacos from a rich palette of ingredients.

------------------------------------------------------------------------------------------------------------------------------------
To apply validation in Spring MVC, you need to

1.Add the Spring Validation starter to the build.
2.Declare validation rules on the class that is to be validated: specifically, the Taco class.
3.Specify that validation should be performed in the controller methods that require validation: specifically, the DesignTacoController’s processTaco()
    method and the OrderController’s processOrder() method.
4.Modify the form views to display validation errors.

------------------------------------------------------------------------------------------------------------------------------------

Spring security :

1.Provide a login page that is designed to match the website.
2.rovide for multiple users, and enable a registration page so new Taco Cloud customers can sign up.
3.Apply different security rules for different request paths. The home page and registration pages, for example, shouldn’t require authentication at all.

Implemented :
# PasswordEncoder
# UserDetailsService
# User Registration
# Added custom filter to security filter chain
# Authorization filter based on endpoint and user's role
# custom login page
# disable csrf protection against particular end point matchers
# Implemented method level authorization

------------------------------------------------------------------------------------------------------------------------------------
Actuator :

# enabled all the endpoints through application.yml
# customised actuator end point :
    - /info through  TacoCountInfoContributor.java
    - also added build information to this endpoint.  This was done using BuildInfoContributor
        To enable build information to be included in the results of the /info endpoint, add the build-info goal to the Spring Boot Maven Plugin executions,
# Created custom endpoints - NotesEndpoint.java
# Defined custom health indicators  - WackoHealthIndicator.java
# secure actuator endpoint
